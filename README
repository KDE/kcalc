
How to enable long double precision for KCalc:
==============================================

If your machine supports the C data type 'long double' and if you
have a working libc you can enable 'long double' precison for KCalc.

( RedHat 5.0 users are out of luck -- I suggest
  you get yourself a KDE friendly Linux distribution 
  that has a working libc )

Here is what to do:

1) Check ../config.h and see whether HAVE_LONG_DOUBLE is define, ie
you should be able to locate a line saying:

#define HAVE_LONG_DOUBLE 1

If you can't find such a line your system doesn't support long
double IEEE precision. => Get Linux ;-)

2) Edit the file kcalctype.h and remove the line
#undef HAVE_LONG_DOUBLE

3) recompile KCalc.

Bernd

--------------------------------------------------------


IMPORTANT: On a number of systems including Linux systems using a certain 
version of gcc (gcc-2.7.3 RedHat 5.0 for example) you will not get a working
version of kcalc unless you undefine the preprosessor symbol FABSL in
../config.h

that is change the line
#define FABSL
to 
/*#define FABLS*/

What this does effectively is tell kcalc to use the C data type
'double' as its fundamental data type instead of 'long double'.
So this proceedure will give you greatly reduced precision. Since
this is a compiler bug there is nothing I can do about it. 
Complain to the gnu people or to your distribution and ask 
them to get a working version of gcc out.

In general if you have trouble getting kcalc to work, the first thing
you should try is to undefine FABSL in ../config.h.
(eg. rs6000-ibm-aix3.2.5 etc )

thanks,
Bernd


kcalc 0.4
=========

Added statistical functions. Use F3 and F4 to switch between them.
If you have trouble with the mathematical functions used, have a
look at kcalctype.h and make the necessary changes.

kcalc 0.3
=========

kcalc is now mostly complete with regard to basic functionality. A few
rough edges remain. Nevertheless, I believe kcalc will prove a useful
little calculator.

Have fun with kcalc!

Bernd
wuebben@kde.org


